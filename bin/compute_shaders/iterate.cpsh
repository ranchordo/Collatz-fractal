#version 430 core

#define PI 3.1415926536

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0, location = 0) uniform image2D img_output;

precision highp float;

uniform vec3 invocation_dimensions=vec3(0);
uniform vec4 dims;
uniform float magthshld;
uniform float maxIter;


vec2 complexCos(vec2 c) {
	return vec2(cos(c.x)*cosh(c.y),-(sin(c.x)*sinh(c.y)));
}

vec2 Cmod2(vec2 c) {
	return 0.5*(vec2(1,0)-complexCos(c*PI));
}

vec2 cmult(vec2 a, vec2 b) {
	return vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);
}

void main() {
	ivec2 pixel_coords=ivec2(gl_GlobalInvocationID.xy);
	vec2 c=gl_GlobalInvocationID.xy/invocation_dimensions.xy;
	c.y=1-c.y;
	c=c*vec2(dims.y-dims.x,dims.w-dims.z)+dims.xz;
	
	float val=0;
	
	for(int i=0;i<int(maxIter);i++) {
		bool incr=(length(c)>=magthshld);
		
		c=(int(incr)*(cmult((2.5*c + vec2(1,0)),Cmod2(c)) - 0.5*c)) + c; //Yes
		
		val+=int(incr)*(1.0/maxIter);
	}
	val=clamp(val,0,1);
	val=(2*val)/(val+1);
	imageStore(img_output,pixel_coords,vec4(val,val,val,1));
}